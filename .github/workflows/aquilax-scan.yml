name: AquilaX Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  aquilax_scan:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          echo "Installing AquilaX CLI and dependencies..."
          pip install aquilax==1.1.10
          sudo apt-get update && sudo apt-get install -y jq

      - name: Run AquilaX Scan
        id: start_scan
        env:
          AQUILAX_AUTH: ${{ secrets.AQUILAX_API_TOKEN }}
        run: |
          echo "Starting AquilaX Security Scan..."
          scan_output=$(aquilax scan \
            --org-id "6691108b1985981c1f5d5b93" \
            --group-id "66cc51d790da713a3f7c6075" \
            --git-uri "https://github.com/AquilaX-AI/vulnapp-python" \
            --scanners sast_scanner iac_scanner secret_scanner pii_scanner sca_scanner container_scanner cicd_scanner\
            --public true \
            --frequency Once \
            --tags cicd audit)
          
          # echo "Scan :$scan_output"
          SCAN_ID=$(echo "$scan_output" | jq -r '.scan_id')
          PROJECT_ID=$(echo "$scan_output" | jq -r '.project_id')
          echo "Scan started with SCAN_ID=$SCAN_ID and PROJECT_ID=$PROJECT_ID"
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

      - name: Poll for Scan Completion
        env:
          AQUILAX_AUTH: ${{ secrets.AQUILAX_API_TOKEN }}
        run: |
          max_attempts=20
          sleep_time=5
          attempt=1
          while [ "$attempt" -le "$max_attempts" ]; do
            echo "Scan results..."
            scan_results=$(aquilax get-scan-details \
              --org-id "6691108b1985981c1f5d5b93" \
              --group-id "66cc51d790da713a3f7c6075" \
              --project-id "$PROJECT_ID" \
              --scan-id "$SCAN_ID")

            scan_status=$(echo "$scan_results" | jq -r '.scan.status')
            echo "Current Scan Status: $scan_status"
            
            if [ "$scan_status" = "COMPLETED" ]; then
              echo "Scan completed successfully."
              break
            elif [ "$scan_status" = "FAILED" ]; then
              echo "Scan failed."
              exit 1
            fi

            # Exponential backoff with a maximum sleep time of 60 seconds
            sleep "$sleep_time"
            sleep_time=$((sleep_time * 2))
            if [ "$sleep_time" -gt 60 ]; then
              sleep_time=60
            fi

            attempt=$((attempt + 1))
          done

          if [ "$scan_status" != "COMPLETED" ]; then
            echo "Scan did not complete within the expected time frame."
            exit 1
          fi

      - name: Check for Vulnerabilities
        env:
          AQUILAX_AUTH: ${{ secrets.AQUILAX_API_TOKEN }}
        run: |
          echo "Fetching final scan results..."
          final_results=$(aquilax get-scan-details \
            --org-id "6691108b1985981c1f5d5b93" \
            --group-id "66cc51d790da713a3f7c6075" \
            --project-id "$PROJECT_ID" \
            --scan-id "$SCAN_ID")
          # echo "Final Scan Results: $final_results"
          
          vulnerabilities_count=$(echo "$final_results" | jq '[.scan.results[] | select(.findings != null) | .findings[]] | length')
          echo "::warning::Number of vulnerabilities found: $vulnerabilities_count"
      
          fail_on_vulns=false  # Set this to 'false' if you don't want the pipeline to fail on vulnerabilities

          if [ "$fail_on_vulns" = "true" ]; then
            if [ "$vulnerabilities_count" -gt 0 ]; then
              echo "::error::Vulnerabilities found in the scan results!"
              exit 1
            else
              echo "::notice::No vulnerabilities found."
            fi
          else
            echo "::warning::Vulnerabilities found, but pipeline will continue due to 'fail_on_vulns' set to false."
          fi