name: Aquilax Scan

on:
  push:
    branches:
      - main

jobs:
        scan:
          runs-on: ubuntu-latest
          steps:
            - name: Checkout repository
              uses: actions/checkout@v2
      
            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.x'
      
            - name: Install Aquilax Client
              run: |
                pip install aquilax==1.1.6
      
            - name: Install jq
              run: sudo apt-get install jq
      
            - name: Start Aquilax Scan
              id: start_scan
              run: |
                scan_info=$(aquilax scan --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --git-uri "https://github.com/AquilaX-AI/vulnapp-python" --scanners "sast_scanner" "iac_scanner" --public True --frequency Once --tags "cicd" "audit")
                echo "$scan_info" | jq
                SCAN_ID=$(echo "$scan_info" | jq -r '.scan_id')
                PROJECT_ID=$(echo "$scan_info" | jq -r '.project_id')
                echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
                echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
      
            - name: Poll for Scan Completion
              run: |
                while true; do
                  scan_status=$(aquilax get-scan-details --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --project-id "$PROJECT_ID" --scan-id "$SCAN_ID")
                  echo "$scan_status" | jq
                  status=$(echo "$scan_status" | jq -r '.scan.status')
                  if [ "$status" = "COMPLETED" ]; then
                    echo "Scan completed!"
                    break
                  else
                    echo "Scan status: $status. Waiting for 30 seconds..."
                    sleep 30
                  fi
                done
      
            - name: Upload scan results
              run: |
                scan_status=$(aquilax get-scan-details --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --project-id "$PROJECT_ID" --scan-id "$SCAN_ID")
                echo "$scan_status" > scan_results.json
                cat scan_results.json
                echo "Uploading scan results..."
                actions/upload-artifact@v2
                with:
                  name: scan-results
                  path: scan_results.json
      