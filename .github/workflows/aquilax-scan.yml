name: AquilaX Security Scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  aquilax_scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install aquilax==1.1.6
          sudo apt-get install jq

      - name: Run AquilaX Scan
        id: start_scan
        env:
          AQUILAX_AUTH: ${{ secrets.AQUILAX_API_TOKEN }}
        run: |
          scan_info=$(aquilax scan --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --git-uri "${{ github.repository_url }}" --scanners "sast_scanner" "iac_scanner" --public True --frequency Once --tags "cicd" "audit")
          echo "$scan_info" | jq
          SCAN_ID=$(echo "$scan_info" | jq -r '.scan_id')
          PROJECT_ID=$(echo "$scan_info" | jq -r '.project_id')
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV

      - name: Poll for Scan Completion
        run: |
          while true; do
            scan_status=$(aquilax get-scan-details --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --project-id "$PROJECT_ID" --scan-id "$SCAN_ID")
            echo "$scan_status" | jq
            status=$(echo "$scan_status" | jq -r '.scan.status')
            if [ "$status" = "COMPLETED" ]; then
              echo "Scan completed!"
              break
            else
              echo "Scan status: $status. Waiting for 30 seconds..."
              sleep 30
            fi
          done

      - name: Save Scan Results
        run: |
          scan_results=$(aquilax get-scan-details --org-id "6691108b1985981c1f5d5b93" --group-id "66cc51d790da713a3f7c6075" --project-id "$PROJECT_ID" --scan-id "$SCAN_ID")
          echo "$scan_results" > scan_results.json

      - name: Upload Scan Results
        uses: actions/upload-artifact@v2
        with:
          name: aquilax-scan-results
          path: scan_results.json

      - name: Check for Vulnerabilities
        run: |
          vulns=$(jq -r '.scan.results[] | select(.findings != null) | .findings[]' scan_results.json)
          if [[ -n "$vulns" ]]; then
            vuln_count=$(echo "$vulns" | wc -l)
            echo "$vuln_count vulnerabilities found!"
            exit 1
          else
            echo "No vulnerabilities found."
          fi
